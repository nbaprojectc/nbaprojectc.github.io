{"version":3,"sources":["components/TeamName.js","components/Search.js","components/PlayerInfo.js","components/AddPlayers.js","components/RemovePlayer.js","components/TeamTable.js","components/Meta.js","models/Player.js","models/util.js","models/Team.js","components/TeamEditor.js","components/Home.js","App.js","index.js"],"names":["TeamName","state","visible","newTeamName","handleOk","_this","props","updateName","setState","handleCancel","handleInput","e","target","value","this","_this2","react_default","a","createElement","react","typography","Title","style","textAlign","teamName","tooltip","placement","title","icon","className","marginLeft","fontSize","type","onClick","showModal","modal","onOk","onCancel","destroyOnClose","input","autoFocus","size","placeholder","onChange","onKeyPress","charCode","Component","Search","width","marginBottom","search","handleSearch","PlayerInfo","renderStats","data","i","key","player","push","margin","popconfirm","href","textDecoration","okText","cancelButtonProps","display","AddPlayers","rowSelection","selectedRowKeys","selectedRows","onSelect","getCheckboxProps","disabled","length","_","components_Search","table","bordered","columns","dataIndex","sorter","b","nameA","Player","toLowerCase","nameB","sortDirections","TmA","Tm","TmB","PosA","Pos","PosB","Age","PTS","fixed","render","components_PlayerInfo","dataSource","loading","pagination","pageSize","showTotal","total","range","concat","current","page","pageChange","rowKey","RemovePlayer","cancelText","onConfirm","handleRemove","TeamTable","components_RemovePlayer","Meta","statistic","float","paddingBottom","valueStyle","marginTop","suffix","attributes","k","Object","classCallCheck","serialize","playerId","firstName","split","lastName","stats","W_PCT","MIN","FGA","FGA3","FTA","OREB","DREB","AST","TOV","STL","BLK","PF","fetch","json","players","map","playerData","RichardToEmilio","teamId","id","richard","emilio","Team","rows","keys","serverRows","serverTeamName","undefined","name","getAllForTeam","method","body","JSON","stringify","headers","Accept","Content-Type","response","status","Error","newPlayersDelta","p","objectSpread","oldPlayer","teams","teamData","team","get","loadPlayers","TeamEditor","possibleConstructorReturn","getPrototypeOf","call","loadTeam","getWithPlayers","_id","then","getData","getAll","fuse","Fuse","predict","res","console","log","save","saving","history","message","success","catch","err","error","list","onTabChange","match","params","TabPane","Tabs","page_header","onBack","subTitle","components_TeamName","tabs","defaultActiveKey","tab","components_Meta","components_AddPlayers","components_TeamTable","es_button","Home","_callee","newTeam","regenerator_default","wrap","_context","prev","next","stop","height","justifyContent","flexDirection","alignItems","App","react_router_dom","react_router","path","exact","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7970ce13.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Icon, Typography, Modal, Tooltip, Input } from 'antd';\r\n\r\nclass TeamName extends Component {\r\n    state = {\r\n        visible: false,\r\n        newTeamName: null\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.props.updateName(this.state.newTeamName);\r\n        this.setState({\r\n            visible: false,\r\n            newTeamName: null\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    };\r\n\r\n    handleInput = e => {\r\n        this.setState({ newTeamName: e.target.value });\r\n    };\r\n\r\n    showModal() {\r\n        this.setState({ visible: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Typography.Title style={{ textAlign: 'center' }}>\r\n                    {this.props.teamName}\r\n                    <Tooltip placement=\"top\" title=\"Edit team name\">\r\n                        <Icon\r\n                            className=\"editIcon\"\r\n                            style={{ marginLeft: '5px', fontSize: '14px' }}\r\n                            type=\"edit\"\r\n                            onClick={() => this.showModal()}\r\n                        />\r\n                    </Tooltip>\r\n                </Typography.Title>\r\n                <Modal\r\n                    title=\"Edit team name\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Input\r\n                        autoFocus\r\n                        size=\"large\"\r\n                        placeholder={this.props.teamName}\r\n                        onChange={this.handleInput}\r\n                        onKeyPress={e => {\r\n                            if (e.charCode === 13) this.handleOk();\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamName;\r\n","import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <Input.Search\r\n                style={{ width: '200px', marginBottom: '10px' }}\r\n                value={this.props.search}\r\n                onChange={this.props.handleSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Modal, Popconfirm } from 'antd';\r\n\r\nclass PlayerInfo extends Component {\r\n    state = { visible: false };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    };\r\n\r\n    renderStats = () => {\r\n        let data = [];\r\n        let i = 0;\r\n        for (let key in this.props.player) {\r\n            data.push(\r\n                <p key={i++} style={{ margin: '0px' }}>\r\n                    <b>{key}: </b>\r\n                    {this.props.player[key]}\r\n                </p>\r\n            );\r\n        }\r\n        return data;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Popconfirm title=\"\" visible={false}>\r\n                    <a\r\n                        onClick={this.showModal}\r\n                        href=\"/\"\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        Expand\r\n                    </a>\r\n                </Popconfirm>\r\n                <Modal\r\n                    title=\"Player statistics\"\r\n                    okText=\"Close\"\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleOk}\r\n                    visible={this.state.visible}\r\n                    cancelButtonProps={{ style: { display: 'none' } }}\r\n                    destroyOnClose={true}\r\n                >\r\n                    {this.renderStats()}\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerInfo;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport { Table } from 'antd';\r\nimport * as _ from 'lodash';\r\nimport PlayerInfo from './PlayerInfo';\r\n\r\nclass AddPlayers extends Component {\r\n    render() {\r\n        const rowSelection = {\r\n            selectedRowKeys: this.props.selectedRowKeys,\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                this.props.onSelect(selectedRowKeys, selectedRows);\r\n            },\r\n            getCheckboxProps: player => ({\r\n                disabled:\r\n                    this.props.selectedRowKeys.length >= 15 &&\r\n                    _.indexOf(this.props.selectedRows, player) === -1\r\n            })\r\n        };\r\n        return (\r\n            <div style={{ textAlign: 'right' }}>\r\n                <Search\r\n                    handleSearch={this.props.handleSearch}\r\n                    search={this.props.search}\r\n                />\r\n                <Table\r\n                    bordered\r\n                    rowSelection={rowSelection}\r\n                    columns={[\r\n                        {\r\n                            title: 'Name',\r\n                            dataIndex: 'Player',\r\n                            sorter: (a, b) => {\r\n                                let nameA = a.Player.toLowerCase(),\r\n                                    nameB = b.Player.toLowerCase();\r\n                                if (nameA < nameB) return -1;\r\n                                if (nameA > nameB) return 1;\r\n                                return 0;\r\n                            },\r\n                            sortDirections: ['ascend', 'descend']\r\n                        },\r\n                        {\r\n                            title: 'Team',\r\n                            dataIndex: 'Tm',\r\n                            sorter: (a, b) => {\r\n                                let TmA = a.Tm.toLowerCase(),\r\n                                    TmB = b.Tm.toLowerCase();\r\n                                if (TmA < TmB) return -1;\r\n                                if (TmA > TmB) return 1;\r\n                                return 0;\r\n                            },\r\n                            sortDirections: ['ascend', 'descend']\r\n                        },\r\n                        {\r\n                            title: 'Position',\r\n                            dataIndex: 'Pos',\r\n                            sorter: (a, b) => {\r\n                                let PosA = a.Pos.toLowerCase(),\r\n                                    PosB = b.Pos.toLowerCase();\r\n                                if (PosA < PosB) return -1;\r\n                                if (PosA > PosB) return 1;\r\n                                return 0;\r\n                            },\r\n                            sortDirections: ['ascend', 'descend']\r\n                        },\r\n                        {\r\n                            title: 'Age',\r\n                            dataIndex: 'Age',\r\n                            sorter: (a, b) => a.Age - b.Age,\r\n                            sortDirections: ['ascend', 'descend']\r\n                        },\r\n                        {\r\n                            title: 'Points',\r\n                            dataIndex: 'PTS',\r\n                            sorter: (a, b) => a.PTS - b.PTS,\r\n                            sortDirections: ['ascend', 'descend']\r\n                        },\r\n                        {\r\n                            title: '',\r\n                            key: 'operation',\r\n                            fixed: 'right',\r\n                            width: 100,\r\n                            render: player => <PlayerInfo player={player} />\r\n                        }\r\n                    ]}\r\n                    dataSource={this.props.data}\r\n                    loading={this.props.loading}\r\n                    pagination={{\r\n                        pageSize: 15,\r\n                        showTotal: (total, range) =>\r\n                            `${range[0]}-${range[1]} of ${total} items`,\r\n                        current: this.props.page,\r\n                        onChange: this.props.pageChange\r\n                    }}\r\n                    rowKey={'key'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPlayers;\r\n","import React, { Component } from 'react';\r\nimport { Popconfirm } from 'antd';\r\n\r\nclass RemovePlayer extends Component {\r\n    render() {\r\n        return (\r\n            <Popconfirm\r\n                title=\"Remove player from team?\"\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n                onConfirm={() => this.props.handleRemove(this.props.player)}\r\n            >\r\n                <a href=\"/\">Remove</a>\r\n            </Popconfirm>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RemovePlayer;\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'antd';\r\nimport RemovePlayer from './RemovePlayer';\r\nimport PlayerInfo from './PlayerInfo';\r\n\r\nclass TeamTable extends Component {\r\n    render() {\r\n        return (\r\n            <Table\r\n                columns={[\r\n                    {\r\n                        title: 'Name',\r\n                        dataIndex: 'Player',\r\n                        sorter: (a, b) => {\r\n                            let nameA = a.Player.toLowerCase(),\r\n                                nameB = b.Player.toLowerCase();\r\n                            if (nameA < nameB) return -1;\r\n                            if (nameA > nameB) return 1;\r\n                            return 0;\r\n                        },\r\n                        sortDirections: ['ascend', 'descend']\r\n                    },\r\n                    {\r\n                        title: 'Team',\r\n                        dataIndex: 'Tm',\r\n                        sorter: (a, b) => {\r\n                            let TmA = a.Tm.toLowerCase(),\r\n                                TmB = b.Tm.toLowerCase();\r\n                            if (TmA < TmB) return -1;\r\n                            if (TmA > TmB) return 1;\r\n                            return 0;\r\n                        },\r\n                        sortDirections: ['ascend', 'descend']\r\n                    },\r\n                    {\r\n                        title: 'Position',\r\n                        dataIndex: 'Pos',\r\n                        sorter: (a, b) => {\r\n                            let PosA = a.Pos.toLowerCase(),\r\n                                PosB = b.Pos.toLowerCase();\r\n                            if (PosA < PosB) return -1;\r\n                            if (PosA > PosB) return 1;\r\n                            return 0;\r\n                        },\r\n                        sortDirections: ['ascend', 'descend']\r\n                    },\r\n                    {\r\n                        title: 'Age',\r\n                        dataIndex: 'Age',\r\n                        sorter: (a, b) => a.Age - b.Age,\r\n                        sortDirections: ['ascend', 'descend']\r\n                    },\r\n                    {\r\n                        title: 'Points',\r\n                        dataIndex: 'PTS',\r\n                        sorter: (a, b) => a.PTS - b.PTS,\r\n                        sortDirections: ['ascend', 'descend']\r\n                    },\r\n                    {\r\n                        title: '',\r\n                        key: 'expand',\r\n                        fixed: 'right',\r\n                        width: 100,\r\n                        render: player => <PlayerInfo player={player} />\r\n                    },\r\n                    {\r\n                        title: '',\r\n                        key: 'operation',\r\n                        fixed: 'right',\r\n                        width: 100,\r\n                        render: player => (\r\n                            <RemovePlayer\r\n                                player={player}\r\n                                handleRemove={this.props.handleRemove}\r\n                            />\r\n                        )\r\n                    }\r\n                ]}\r\n                pagination={{\r\n                    pageSize: 15,\r\n                    showTotal: (total, range) =>\r\n                        `${range[0]}-${range[1]} of ${total} items`\r\n                }}\r\n                dataSource={this.props.selectedRows}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamTable;\r\n","import React, { Component } from 'react';\r\nimport { Statistic } from 'antd';\r\n\r\nclass Meta extends Component {\r\n    render() {\r\n        return (\r\n            <Statistic\r\n                style={{ float: 'left', paddingBottom: '5px' }}\r\n                valueStyle={{\r\n                    marginTop: -10,\r\n                    textAlign: 'left'\r\n                }}\r\n                title=\"Players selected\"\r\n                value={this.props.length}\r\n                suffix=\"/ 15\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Meta;\r\n","import API_URL from './util';\r\n\r\nexport default class Player {\r\n    constructor(attributes) {\r\n        for(let k in attributes) this[k] = attributes[k];\r\n    }\r\n\r\n    static async getAll() {\r\n        let players = (await (await fetch(`${API_URL}/Players`)).json()).players;\r\n        return players.map(playerData => new Player(Player.RichardToEmilio(playerData)));\r\n    }\r\n    \r\n    static async getAllForTeam(teamId) {\r\n        try {\r\n            let players = (await (await fetch(`${API_URL}/TeamPlayers/${teamId}`)).json()).players;\r\n            return players.map(playerData => new Player(Player.RichardToEmilio(playerData)));\r\n        } catch {\r\n            return []; // Error whilst retrieving data so return empty array\r\n        }\r\n    }\r\n\r\n    static async get(id) {\r\n        let player = (await (await fetch(`${API_URL}/Players/${id}`)).json()).players[0];\r\n        return new Player(Player.RichardToEmilio(player));\r\n    }\r\n\r\n    static RichardToEmilio(richard) {\r\n        let emilio = {\r\n            Player: `${richard.firstName} ${richard.lastName}`,\r\n            key: richard.playerId\r\n        };\r\n        for(let k in richard.stats) emilio[k] = richard.stats[k];\r\n    \r\n        return emilio;\r\n    }\r\n\r\n    serialize = () => ({\r\n        playerId: this.key,\r\n        firstName: this.Player.split(' ')[0],\r\n        lastName:  this.Player.split(' ')[1],\r\n        stats: {\r\n            W_PCT: this.W_PCT, \r\n            MIN: this.MIN, \r\n            FGA: this.FGA, \r\n            FGA3: this.FGA3, \r\n            FTA: this.FTA, \r\n            OREB: this.OREB, \r\n            DREB: this.DREB, \r\n            AST: this.AST, \r\n            TOV: this.TOV, \r\n            STL: this.STL, \r\n            BLK: this.BLK, \r\n            PF: this.PF, \r\n            PTS: this.PTS \r\n        }\r\n    });\r\n}","const API_URL = \"\";\r\n\r\nexport default API_URL;","import * as _ from 'lodash';\r\nimport API_URL from './util';\r\nimport Player from './Player';\r\n\r\nexport default class Team {\r\n    rows = [];\r\n    keys = [];\r\n\r\n    serverRows = [];\r\n    serverTeamName = undefined;\r\n\r\n    constructor(attributes) {\r\n        if (typeof attributes !== 'object') return; // No input object, don't set attributes\r\n        for (let k in attributes) this[k] = attributes[k];\r\n\r\n        if (typeof attributes.name === 'string')\r\n            this.serverTeamName = attributes.name;\r\n    }\r\n\r\n    static async getAll() {\r\n        let teams = (await (await fetch(`${API_URL}/Teams`)).json()).teams;\r\n        return teams.map(teamData => new Team(teamData));\r\n    }\r\n\r\n    static async get(id) {\r\n        let team = (await (await fetch(`${API_URL}/Teams/${id}`)).json())\r\n            .teams[0];\r\n        return new Team(team);\r\n    }\r\n\r\n    static async getWithPlayers(id) {\r\n        let team = await Team.get(id);\r\n        await team.loadPlayers();\r\n        return team;\r\n    }\r\n\r\n    async loadPlayers() {\r\n        this.rows = await Player.getAllForTeam(this.id);\r\n        this.serverRows = _.clone(this.rows);\r\n        this.keys = this.rows.map(player => player.key);\r\n    }\r\n\r\n    async delete() {\r\n        await fetch(`${API_URL}/Teams/${this.id}`, { method: 'DELETE' });\r\n    }\r\n\r\n    async save() {\r\n        if (typeof this.id !== 'number') {\r\n            // Create a new team\r\n            let response = await fetch(`${API_URL}/Teams`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    teamName: this.name\r\n                }),\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if (response.status !== 201)\r\n                throw new Error('Failed to create new team');\r\n            let data = await response.json();\r\n            for (let k in data) this[k] = data[k];\r\n        } else if (this.name !== this.serverTeamName) {\r\n            // Update the team record\r\n            let response = await fetch(`${API_URL}/Teams/${this.id}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    teamName: this.name\r\n                }),\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if (response.status !== 200)\r\n                throw new Error('Failed to update team');\r\n        }\r\n        this.serverTeamName = this.name;\r\n\r\n        // Attempt to post the new TeamPlayers if any have been added\r\n        let newPlayersDelta = _.differenceBy(\r\n            this.rows,\r\n            this.serverRows,\r\n            p => p.key\r\n        ).map(player => ({\r\n            ...player.serialize(),\r\n            teamId: this.id\r\n        }));\r\n        if (newPlayersDelta.length > 0) {\r\n            let response = await fetch(`${API_URL}/TeamPlayers/${this.id}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    players: newPlayersDelta\r\n                }),\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if (response.status !== 201)\r\n                throw new Error('Failed to update team players.');\r\n        }\r\n\r\n        // Attempt to delete the old team players\r\n        for (let oldPlayer of _.differenceBy(\r\n            this.serverRows,\r\n            this.rows,\r\n            p => p.key\r\n        )) {\r\n            let response = await fetch(\r\n                `${API_URL}/TeamPlayers/${this.id}/${oldPlayer.key}`,\r\n                {\r\n                    method: 'DELETE'\r\n                }\r\n            );\r\n            if (response.status !== 200)\r\n                throw new Error('Failed to update team players.');\r\n        }\r\n\r\n        this.serverRows = _.clone(this.rows);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Tabs, PageHeader, Button, message } from 'antd';\r\nimport TeamName from './TeamName';\r\nimport AddPlayers from './AddPlayers';\r\nimport TeamTable from './TeamTable';\r\nimport Fuse from 'fuse.js';\r\nimport * as _ from 'lodash';\r\nimport Meta from './Meta';\r\n\r\nimport Team from '../models/Team';\r\nimport Player from '../models/Player';\r\n\r\nclass TeamEditor extends Component {\r\n    team = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: this.props.match.params.id || '',\r\n            name: this.props.match.params.name || '',\r\n            selectedRowKeys: [],\r\n            selectedRows: [],\r\n            data: [],\r\n            fuse: null,\r\n            loading: true,\r\n            search: '',\r\n            page: 1,\r\n            saving: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.loadTeam();\r\n    }\r\n\r\n    loadTeam = () => {\r\n        Team\r\n            .getWithPlayers(this.state._id)\r\n            .then(team => {\r\n                    this.team = team;\r\n                    this.setState({\r\n                        selectedRowKeys: team.keys,\r\n                        name: team.name,\r\n                        selectedRows: team.rows\r\n                    })\r\n                }\r\n            );\r\n    };\r\n\r\n    getData = () => {\r\n        Player.getAll().then(data => this.setState({ data }))\r\n            .then(() => {\r\n                this.setState({\r\n                    fuse: new Fuse(this.state.data, {\r\n                        keys: ['Player']\r\n                    }),\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    predict = () => {\r\n        fetch('/api/predict', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.selectedRows),\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => console.log(json));\r\n    };\r\n\r\n    save = () => {\r\n        this.setState({ saving: true });\r\n        // Update the team object\r\n        this.team.name = this.state.name;\r\n        this.team.rows = this.state.selectedRows;\r\n        this.team.keys = this.state.selectedRowKeys;\r\n        // Save the changes\r\n        this.team.save()\r\n            .then(() => {\r\n                this.props.history.push(`/team/${this.team.id}`);\r\n                this.setState({ saving: false });\r\n                message.success(\"Team saved.\");\r\n            })\r\n            .catch(err => {\r\n                this.setState({ saving: false });\r\n                message.error(`Error: ${err.message}`);\r\n            });\r\n    };\r\n\r\n    handleSearch = e => {\r\n        e.target.value === ''\r\n            ? this.setState({ data: this.state.fuse.list, search: '' })\r\n            : this.setState({\r\n                  data: this.state.fuse.search(e.target.value),\r\n                  page: 1,\r\n                  search: e.target.value\r\n              });\r\n    };\r\n\r\n    onSelect = (selectedRowKeys, selectedRows) => {\r\n        this.setState({ selectedRowKeys, selectedRows });\r\n    };\r\n\r\n    onTabChange = () => {\r\n        this.handleSearch({ target: { value: '' } });\r\n    };\r\n\r\n    handleRemove = player => {\r\n        this.setState({\r\n            selectedRowKeys: _.without(this.state.selectedRowKeys, player.key),\r\n            selectedRows: _.without(this.state.selectedRows, player)\r\n        });\r\n    };\r\n\r\n    updateName = name => {\r\n        this.setState({ name });\r\n    };\r\n\r\n    pageChange = e => {\r\n        this.setState({ page: e });\r\n    };\r\n\r\n    render() {\r\n        let TabPane = Tabs.TabPane;\r\n        return (\r\n            <Fragment>\r\n                <PageHeader\r\n                    style={{ textAlign: 'left' }}\r\n                    onBack={() => {\r\n                        this.props.history.push('/');\r\n                    }}\r\n                    title=\"Team Editor\"\r\n                    subTitle=\"create or modify an existing team\"\r\n                />\r\n                <TeamName\r\n                    updateName={this.updateName}\r\n                    teamName={this.state.name}\r\n                    loading={this.state.loading}\r\n                />\r\n                <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange}>\r\n                    <TabPane tab=\"Add Players\" key=\"1\">\r\n                        <Meta length={this.state.selectedRowKeys.length} />\r\n                        <AddPlayers\r\n                            loading={this.state.loading}\r\n                            data={this.state.data}\r\n                            onSelect={this.onSelect}\r\n                            selectedRowKeys={this.state.selectedRowKeys}\r\n                            selectedRows={this.state.selectedRows}\r\n                            handleSearch={this.handleSearch}\r\n                            search={this.state.search}\r\n                            page={this.state.page}\r\n                            pageChange={this.pageChange}\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tab=\"View Team\" key=\"2\">\r\n                        <TeamTable\r\n                            selectedRows={this.state.selectedRows}\r\n                            handleRemove={this.handleRemove}\r\n                        />\r\n                        <Button\r\n                            disabled={this.state.selectedRows.length < 3}\r\n                            type=\"primary\"\r\n                            onClick={this.predict}\r\n                            style={{ margin: '10px' }}\r\n                        >\r\n                            Predict\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.save}\r\n                            disabled={this.state.saving}\r\n                            loading={this.state.saving}\r\n                            style={{ margin: '10px' }}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button style={{ margin: '10px' }}>Revert</Button>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamEditor;\r\n","import React, { Component } from 'react';\r\nimport { Button, Typography, Input, message } from 'antd';\r\nimport Team from '../models/Team';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        name: ''\r\n    };\r\n\r\n    handleOk = async () => {\r\n        if (this.state.name === '') message.error('Please enter a team name');\r\n        else {\r\n            this.setState({\r\n                visible: false\r\n            });\r\n\r\n            let newTeam = new Team({ name: this.state.name });\r\n            await newTeam.save();\r\n\r\n            this.props.history.push(`/team/${newTeam.id}`);\r\n        }\r\n    };\r\n\r\n    handleInput = e => {\r\n        this.setState({ name: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography.Title>R.P.S.</Typography.Title>\r\n                <div>\r\n                    <Input\r\n                        autoFocus\r\n                        size=\"large\"\r\n                        placeholder={this.props.teamName}\r\n                        onChange={this.handleInput}\r\n                        onKeyPress={e => {\r\n                            if (e.charCode === 13) this.handleOk();\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport TeamEditor from './components/TeamEditor';\r\nimport Home from './components/Home';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/create/:name\" component={TeamEditor} />\r\n                    <Route path=\"/team/:id\" component={TeamEditor} />\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}